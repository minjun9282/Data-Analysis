import sqlite3
import pandas as pd
import numpy as np
#지역명과 전용면적을 입력할 경우 평균 값을 해당지역 매매가의 평균을 계산합니다.

def avg_selling_price(data, size, local):
    no_dup_list = ['41285 고양시 일산동구', '41190 부천시', '41287 고양시 일산서구', '41290 과천시', '41170 안양시', '11470 양천구', '11440 마포구', '41570 김포시', '11260 중랑구', '41465 용인시 수지구', '41800 연천군', '41650 포천시', '41133 성남시 중원구', '41390 시흥시', '11560 영등포구', '41150 의정부시', '41280 고양시', '11740 강동구', '41270 안산시', '41480 파주시', '11200 성동구', '11350 노원구', '11320 도봉구', '11500 강서구', '41130 성남시', '41610 광주시', '41430 의왕시', '41630 양주시', '11650 서초구', '41450 하남시', '41117 수원시 영통구', '11215 광진구', '41113 수원시 권선구', '41220 평택시', '11230 동대문구', '41550 안성시', '11380 은평구', '11545 금천구', '41500 이천시', '41273 안 산시 단원구', '41271 안산시 상록구', '41210 광명시', '11140 중구', '41110 수원시', '41460 용인시', '41590 화성시', '11710 송파구', '41410 군포시', '41135 성남시 분당구', '41281 고양시 덕양구', '41173 안양시 동안구', '41360 남양주시', '41670 여주시', '11620 관악구', '11680 강남구', '41461 용인시 처인구', '11590 동작구', '41171 안양시 만안구', '41115 수원시 팔달구', '41250 동두천시', '41830 양평군', '11530 구로구', '11410 서대문구', '41820 가평군', '11290 성북구', '11305 강북구', '41131 성남시 수정구', '41463 용인시 기흥구', '41111 수원시 장안구', '41310 구리시', '41370 오산시', '11110 종로구', '11170 용산구'] # 이전에 얻은 결과물
    ji_code = None
    for i in range(len(no_dup_list)):
        if local == no_dup_list[i].split()[-1]:
            ji_code = no_dup_list[i].split()[0]
    conn = sqlite3.connect(data)

    min = size -1
    max = size +1

    df = pd.read_sql("SELECT  gu_price FROM new_deal WHERE %d<size AND size<%d AND ji_code = %s And month != 7" %(min, max, ji_code), conn)
    for i in range(len(df)):
        df.iloc[i,0] = float(df.iloc[i,0].replace(",",""))

    avg_price = df["gu_price"].mean()
    med_price = df['gu_price'].median()
    qua_price75 = df['gu_price'].quantile(0.25)
    qua_price25 = df['gu_price'].quantile(0.75)

    data = {"%s"%local : [avg_price, med_price, qua_price75, qua_price25]}
    new_df = pd.DataFrame(data, columns = ["%s" %local], index=None)
    conn.close()
    return new_df
    



local_name = ['일산동구', '부천시', '일산서구', '과천시', '양천구', '마포구', '김포시', '중랑구', '수지구', '연천군', '포천시', '중원구', '시흥시', '영등포구', '의정부시', '강동구', '파주시', '성동구', '노원구', '도봉구', '강서구', '광주시', '의왕시', '양주시', '서초구', '하남시', '영통구', '광진구', '권선구', '평택시', '동대문구', '안성시', '은평구', '금천구', '이천시', '단원구', '상록구', '광명시', '중구', '화성시', '송파구', '군포시', '분당구', '덕양구', '동안구', '남양주시', '여주시', '관악구', '강남구', '처인구', '동작구', '만안구', '팔달구', '동두천시', '양평군', '구로구', '서대문구', '가평군', '성북구', '강북구', '수정구', '기흥구', '장안구', '구리시', '오산시', '종로구', '용산구']


for i in local_name:
    avg_price_data = avg_selling_price('real_deal20190304.db', 84, i).T
    print(avg_price_data)
#위 반복문에 코드를 추가하여 하나의 데이터프레임으로 합치고자했으나 실패하여 그냥 커맨드 창에 나온 결과를 직접 엑셀로 옮김.. 코드 작성에 시간 소모가 커서

