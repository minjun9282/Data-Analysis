#카카오지도의 행정지역 layer이용
#인접한 행정지역이 시인 경우는 자차 30분기준. (강동-구리 가까움 연천군 포천시 멂) dictionary로 표현, 인접했지만 도로가 단절되있을경우 제외(지도로 애매할경우 각 행정지역 검색 후 최대 자차 30분이내만 인정, 고속도로로 이어져도 한번에 간다면 단절된게 아님), 최단시간 자차이용시 다른 구를 통한뒤 이동하는건 뻇음
distance = {
    '일산동구': ['일산서구', '덕양구'],
    '부천시': ['구로구', '양천구', '강서구'],
    '일산서구': ['일산동구'],
    '과천시': ['관악구', '서초구', '동안구'],
    '양천구': ['강서구', '영등포구', '구로구'],
    '마포구': ['서대문구', '은평구', '용산구','영등포구','강서구', '중구', '덕양구'],
    '김포시': ['일산서구', '일산동구', '강서구'],
    '중랑구': ['노원구', '동대문구', '광진구', '성북구'],
    '수지구': ['분당구', '영통구', '기흥구'],
    '중원구': ['수정구', '분당구'],
    '시흥시': ['단원구'],
    '영등포구': ['양천구', '구로구', '마포구', '동작구', '용산구','강서구'],
    '의정부시': ['도봉구', '노원구','양주시'],
    '강동구': ['광진구', '송파구', '구리시', '하남시'],
    '파주시': ['일산서구'],
    '성동구': ['중구', '종로구', '용산구','강남구','광진구','동대문구'],
    '노원구': ['도봉구', '강북구','중랑구', '성북구', '의정부시', '구리시'],
    '도봉구': ['노원구', '의정부시', '강북구'],
    '강서구': ['덕양구', '마포구', '양천구', '영등포구','부천시'],
    '광주시': ['중원구', '분당구','하남시'],
    '의왕시': ['과천시', '동안구', '군포시','장안구','분당구'],
    '양주시': ['의정부시'],
    '서초구': ['강남구', '용산구', '동작구', '관악구','과천시','수정구'],
    '하남시': ['강동구', '송파구', '광주시'],
    '영통구': ['팔달구', '권선구', '기흥구', '수지구', '장안구'],
    '광진구': ['성동구', '동대문구', '중랑구','송파구','강동구','강남구','구리시'],
    '권선구': ['상록구','팔달구','장안구','의왕시','영통구','화성시'],
    '동대문구': ['성북구','종로구','성동구','중랑구','광진구','중구'],
    '은평구': ['덕양구', '서대문구', '마포구', '종로구'],
    '금천구': ['구로구', '관악구', '광명시'],
    '단원구': ['상록구', '시흥시'],
    '상록구': ['단원구', '군포시','권선구'],
    '광명시': ['구로구', '금천구', '만안구'],
    '중구': ['종로구', '서대문구', '마포구', '용산구', '성동구', '동대문구'],
    '화성시': ['권선구'],
    '송파구': ['강남구', '광진구', '강동구', '하남시', '수정구'],
    '군포시': ['의왕시', '상록구', '만안구', '동안구'],
    '분당구': ['수정구', '중원구', '의왕시', '수지구', '분당구'],
    '덕양구': ['일산동구','강서구','은평구', '마포구'],
    '동안구': ['과천시', '의왕시', '군포시', '만안구'],
    '남양주시': ['구리시'],
    '관악구': ['금천구', '구로구','동작구', '과천시', '서초구', '동안구'],
    '강남구': ['서초구', '송파구', '광진구', '성동구', '용산구','수정구'],
    '처인구': ['기흥구'],
    '동작구': ['영등포구', '서초구', '관악구', '용산구'],
    '만안구': ['광명시', '군포시', '동안구'],
    '팔달구': ['장안구', '권선구', '영통구'],
    '구로구': ['부천시','양천구','영등포구','금천구','광명시','관악구'],
    '서대문구': ['마포구', '은평구', '중구', '종로구'],
    '성북구':['중랑구', '노원구', '동대문구', '강북구', '종로구'],
    '강북구': ['도봉구', '노원구', '성북구'],
    '수정구': ['서초구', '강남구', '송파구', '중원구', '분당구' ],
    '기흥구': ['수지구', '영통구', '처인구'],
    '장안구': ['의왕시', '영통구', '권선구', '팔달구'],
    '구리시': ['강동구', '노원구', '광진구', '남양주시'],
    '종로구': ['성동구', '은평구', '동대문구','중구', '서대문구', '성북구'],
    '용산구': ['마포구','영등포구','성동구','서초구', '중구', '강남구', '동작구'],
    '오산시': ['오산시'],
    '가평군':['가평군'],
    '양평군': ['양평군'],
    '여주시': ['여주시'],
    '연천군': ['연천군'],
    '포천시': ['포천시'],
    '평택시': ['평택시'],
    '안성시': ['안성시'],
    '이천시': ['이천시'],
    '동두천시': ['동두천시']

}

seoul = [ '강남구', '강동구','강북구','강서구','관악구','광진구','구로구','금천구','노원구','도봉구','동대문구','동작구','마포구','서대문구','서초구','성동구','성북구','송파구','양천구','영등포구','용산구','은평구','종로구','중구','중랑구']
#출처: https://www.coursera.org/lecture/python-social-network-analysis/distance-measures-SeNEl coursera 강좌

def work_loc_rec(first_work_location, second_location):
    distance = {
    '일산동구': ['일산서구', '덕양구'],
    '부천시': ['구로구', '양천구', '강서구'],
    '일산서구': ['일산동구'],
    '과천시': ['관악구', '서초구', '동안구'],
    '양천구': ['강서구', '영등포구', '구로구'],
    '마포구': ['서대문구', '은평구', '용산구','영등포구','강서구', '중구', '덕양구'],
    '김포시': ['일산서구', '일산동구', '강서구'],
    '중랑구': ['노원구', '동대문구', '광진구', '성북구'],
    '수지구': ['분당구', '영통구', '기흥구'],
    '중원구': ['수정구', '분당구'],
    '시흥시': ['단원구'],
    '영등포구': ['양천구', '구로구', '마포구', '동작구', '용산구','강서구'],
    '의정부시': ['도봉구', '노원구','양주시'],
    '강동구': ['광진구', '송파구', '구리시', '하남시'],
    '파주시': ['일산서구'],
    '성동구': ['중구', '종로구', '용산구','강남구','광진구','동대문구'],
    '노원구': ['도봉구', '강북구','중랑구', '성북구', '의정부시', '구리시'],
    '도봉구': ['노원구', '의정부시', '강북구'],
    '강서구': ['덕양구', '마포구', '양천구', '영등포구','부천시'],
    '광주시': ['중원구', '분당구','하남시'],
    '의왕시': ['과천시', '동안구', '군포시','장안구','분당구'],
    '양주시': ['의정부시'],
    '서초구': ['강남구', '용산구', '동작구', '관악구','과천시','수정구'],
    '하남시': ['강동구', '송파구', '광주시'],
    '영통구': ['팔달구', '권선구', '기흥구', '수지구', '장안구'],
    '광진구': ['성동구', '동대문구', '중랑구','송파구','강동구','강남구','구리시'],
    '권선구': ['상록구','팔달구','장안구','의왕시','영통구','화성시'],
    '동대문구': ['성북구','종로구','성동구','중랑구','광진구','중구'],
    '은평구': ['덕양구', '서대문구', '마포구', '종로구'],
    '금천구': ['구로구', '관악구', '광명시'],
    '단원구': ['상록구', '시흥시'],
    '상록구': ['단원구', '군포시','권선구'],
    '광명시': ['구로구', '금천구', '만안구'],
    '중구': ['종로구', '서대문구', '마포구', '용산구', '성동구', '동대문구'],
    '화성시': ['권선구'],
    '송파구': ['강남구', '광진구', '강동구', '하남시', '수정구'],
    '군포시': ['의왕시', '상록구', '만안구', '동안구'],
    '분당구': ['수정구', '중원구', '의왕시', '수지구', '분당구'],
    '덕양구': ['일산동구','강서구','은평구', '마포구'],
    '동안구': ['과천시', '의왕시', '군포시', '만안구'],
    '남양주시': ['구리시'],
    '관악구': ['금천구', '구로구','동작구', '과천시', '서초구', '동안구'],
    '강남구': ['서초구', '송파구', '광진구', '성동구', '용산구','수정구'],
    '처인구': ['기흥구'],
    '동작구': ['영등포구', '서초구', '관악구', '용산구'],
    '만안구': ['광명시', '군포시', '동안구'],
    '팔달구': ['장안구', '권선구', '영통구'],
    '구로구': ['부천시','양천구','영등포구','금천구','광명시','관악구'],
    '서대문구': ['마포구', '은평구', '중구', '종로구'],
    '성북구':['중랑구', '노원구', '동대문구', '강북구', '종로구'],
    '강북구': ['도봉구', '노원구', '성북구'],
    '수정구': ['서초구', '강남구', '송파구', '중원구', '분당구' ],
    '기흥구': ['수지구', '영통구', '처인구'],
    '장안구': ['의왕시', '영통구', '권선구', '팔달구'],
    '구리시': ['강동구', '노원구', '광진구', '남양주시'],
    '종로구': ['성동구', '은평구', '동대문구','중구', '서대문구', '성북구'],
    '용산구': ['마포구','영등포구','성동구','서초구', '중구', '강남구', '동작구'],
    '오산시': ['오산시'],
    '가평군':['가평군'],
    '양평군': ['양평군'],
    '여주시': ['여주시'],
    '연천군': ['연천군'],
    '포천시': ['포천시'],
    '평택시': ['평택시'],
    '안성시': ['안성시'],
    '이천시': ['이천시'],
    '동두천시': ['동두천시']

}

    import networkx as nx
    from collections import Counter

    graph = nx.Graph(distance)
    first_shortest_path = nx.shortest_path_length(graph, first_work_location)
    second_shortest_path = nx.shortest_path_length(graph, second_location)
    
    first_recommend_list = []
    second_recommend_list = []

    for i in list(first_shortest_path.keys()):
        if int(first_shortest_path[i]) <= 3:
            first_recommend_list.append((i, first_shortest_path[i]))
    first_recommend_dict = dict(first_recommend_list)


    for i in list(second_shortest_path.keys()):
        if int(second_shortest_path[i]) <= 3:
            second_recommend_list.append((i, second_shortest_path[i]+1))
    second_recommend_dict = dict(second_recommend_list)

    dup_work_loc = list(set(first_recommend_dict.keys())&set(second_recommend_dict.keys()))

    combined_dict = dict(Counter(first_recommend_dict)+ Counter(second_recommend_dict))

    recommend_list = []

    for i in dup_work_loc:
        if int(combined_dict[i]) <= 5:
            recommend_list.append((i, combined_dict[i]))

    recommend_dict = dict(recommend_list)

    #양쪽의 중간이 아닌 한쪽만 가까운 것을 원할 경우..
    if recommend_dict == {}:
        return first_recommend_dict
    else:
        return recommend_dict
